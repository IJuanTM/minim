name: Build and Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Install dependencies
      run: yarn install

    - name: Build extension
      run: yarn build:ext

    - name: Get version from version.json
      id: version
      run: |
        VERSION=$(jq -r '.version' src/version.json)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "::set-output name=version::$VERSION"

    - name: Find zip file
      id: findzip
      run: |
        ZIP_FILE=$(ls *.zip | head -n 1)
        echo "ZIP_FILE=$ZIP_FILE" >> $GITHUB_ENV
        echo "::set-output name=zip_file::$ZIP_FILE"

    - name: Create GitHub release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.version }}
        release_name: Release v${{ steps.version.outputs.version }}

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.findzip.outputs.zip_file }}
        asset_name: ${{ steps.findzip.outputs.zip_file }}
        asset_content_type: application/zip

    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add src/version.json ${{ steps.findzip.outputs.zip_file }}
        git commit -m "Add new release (v${VERSION}) and update ${ZIP_FILE}" || true
        git push origin HEAD:refs/heads/main
